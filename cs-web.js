(()=>{let e;(()=>{const t="__app_hrp",r="production",s=!1;if(e=globalThis[t],e)return;const n={name:t,env:r,get:e=>e in n?n[e]:null,...JSON.parse('{"version":"11.4.0"}')},a=function e(t){const r=t===n,a=r&&s,c={},l=e=>Object.assign(t,e),d=new Proxy(t,{get(s,n){if("assign"===n)return l;if(r&&!String(n).startsWith("$"))return t[n];if(!(n in t)){if(t[n]={},r){const e=o.bind(null,"log",n,!1),r=o.bind(null,"log",n,!0),s=o.bind(null,"warn",n,!1),a=o.bind(null,"warn",n,!0),c=o.bind(null,"error",n,!1),l=o.bind(null,"error",n,!0),d=i.bind(null,n);Object.defineProperties(t[n],{log:{get:()=>e},logDev:{get:()=>r},warn:{get:()=>s},warnDev:{get:()=>a},error:{get:()=>c},errorDev:{get:()=>l},Error:{get:()=>d}})}c[n]=e(t[n]),a&&(globalThis[n]=t[n])}return n in c?c[n]:t[n]},set:(e,r,s)=>(t[r]=s,c[r]=s,a&&(globalThis[r]=t[r]),!0)});return d}(n);function o(e,t,r,...s){if(r)return;const[n,a,o]=function(e){let t=0;e.split("").forEach(((r,s)=>{t=e.charCodeAt(s)+((t<<5)-t)}));return[(16711680&t)>>16,(65280&t)>>8,255&t]}(t);console[e](`%c[${t}]`,`color: rgb(${n}, ${a}, ${o})`,...s)}function i(e,t,...r){return r.length>0&&o("error",e,!1,t,...r),new Error(`[${e}] ${t}`)}globalThis[t]=a,e=a})(),(()=>{const{$backup:t,$bus:r,$idb:s}=e;t.controller={init(){},_setupMessaging(){window.addEventListener("message",(async e=>{const t=e.data;if(!!!(t&&t.$backup&&t.reqId))return;const r=this._handlers.filter((e=>e.name===t.name)),s=(await Promise.all(r.map((e=>e.fn(...t.args))))).find((e=>void 0!==e))||void 0;top.postMessage({$backup:!0,resId:t.reqId,result:s},"*")}))},_on(e,t){this._handlers.push({name:e,fn:t})},async _save(e){if(this._saving)this._afterSave=()=>this._save(e);else{if(this._saving=!0,await s.set("backup",{at:new Date,data:e}),this._saving=!1,this._afterSave){const e=this._afterSave;this._afterSave=null,await e()}t.logDev("saved")}},async _read(){const e=await s.get("backup");return e?e.data:null}}})(),(()=>{const{$idb:t,$bus:r}=e;t.controller={async init(){Object.assign(t,this._createApi("data")),t.files=this._createApi("files"),t.on=this.on.bind(this),this._db=await this._open("harpa"),this._handlers={change:[],storageExceeded:[]},r.on("idb.change",(()=>this._call("change"))),r.on("idb.storageExceeded",(()=>this._call("storageExceeded"))),await this._enablePersistentStorage()},on(e,t){if(!this._handlers[e])throw new Error(`unsupported event "${e}"`);this._handlers[e].push(t)},_createApi(e){return{get:this._get.bind(this,e),has:this._has.bind(this,e),set:this._set.bind(this,e),keys:this._keys.bind(this,e),clear:this._clear.bind(this,e),remove:this._remove.bind(this,e)}},async _get(e,t,r=null){return new Promise(((s,n)=>{const a=this._db.transaction([e],"readonly").objectStore(e).get(t);a.onsuccess=()=>s(a.result??r),a.onerror=()=>n(a.error)}))},async _has(e,t){return new Promise(((r,s)=>{const n=this._db.transaction([e],"readonly").objectStore(e).getKey(t);n.onsuccess=()=>r(void 0!==n.result),n.onerror=()=>s(n.error)}))},async _set(e,t,s){await new Promise(((n,a)=>{const o=this._db.transaction([e],"readwrite"),i=o.objectStore(e).put(s,t);i.onsuccess=()=>{r.call("idb.change"),r.send("idb.change"),n()},i.onerror=()=>a(i.error),o.onabort=()=>a(o.error),o.onabort=()=>{"QuotaExceededError"===o.error.name&&(r.call("idb.storageExceeded"),r.send("idb.storageExceeded")),a(o.error)}}))},async _keys(e){return new Promise(((t,r)=>{const s=this._db.transaction([e],"readonly").objectStore(e).getAllKeys();s.onsuccess=()=>t(s.result),s.onerror=()=>r(s.error)}))},async _clear(e){return new Promise(((t,s)=>{const n=this._db.transaction([e],"readwrite").objectStore(e).clear();n.onsuccess=()=>{r.call("idb.change"),r.send("idb.change"),t()},n.onerror=()=>s(n.error)}))},async _remove(e,t){return new Promise(((s,n)=>{const a=this._db.transaction([e],"readwrite").objectStore(e).delete(t);a.onsuccess=()=>{r.call("idb.change"),r.send("idb.change"),s()},a.onerror=()=>n(a.error)}))},_open:async e=>new Promise(((t,r)=>{const s=indexedDB.open(e,2);s.onsuccess=()=>t(s.result),s.onerror=()=>r(s.error),s.onupgradeneeded=()=>{const e=s.result,t=new Set(e.objectStoreNames);t.has("data")||e.createObjectStore("data"),t.has("files")||e.createObjectStore("files")}})),_call(e){this._handlers[e].forEach((e=>e()))},async _enablePersistentStorage(){navigator.storage.persist&&await navigator.storage.persist()}}})(),(()=>{const{$startup:t,$idb:r,$backup:s}=e;t.webController={async init(){this._actors=new Set(["welcome","hframe","harpa"]),this._propagateEvents(),this._isBackupPage()&&(await r.controller.init(),s.controller.init())},_propagateEvents(){window.addEventListener("message",(({data:e})=>{this._isAllowed(e)&&chrome.runtime.sendMessage(e)})),chrome.runtime.onMessage.addListener((e=>{this._isAllowed(e)&&window.postMessage({...e,__processed:!0},"*")}))},_isAllowed(e){return!(!e||!e.type||e.__processed)&&this._actors.has(e.type.split(".")[0])},_isBackupPage:()=>"harpa.ai"===location.host&&"/backup"===location.pathname},t.webController.init()})()})();